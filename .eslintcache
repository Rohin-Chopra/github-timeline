[{"C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\App.js":"1","C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\screens\\HomeScreen.js":"2","C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\components\\Navbar.js":"3","C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\components\\Footer.js":"4","C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\index.js":"5","C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\screens\\TimelineScreen.js":"6","C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\components\\GithubTimeline.js":"7","C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\utils\\parseDate.js":"8"},{"size":1119,"mtime":1608589398623,"results":"9","hashOfConfig":"10"},{"size":3650,"mtime":1608589895875,"results":"11","hashOfConfig":"10"},{"size":829,"mtime":1608588214804,"results":"12","hashOfConfig":"10"},{"size":1764,"mtime":1608589553365,"results":"13","hashOfConfig":"10"},{"size":151,"mtime":1608445642968,"results":"14","hashOfConfig":"10"},{"size":3318,"mtime":1608590238875,"results":"15","hashOfConfig":"10"},{"size":3660,"mtime":1608587263511,"results":"16","hashOfConfig":"10"},{"size":327,"mtime":1608524146248,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"usq05r",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\App.js",["36"],"import React, { Fragment } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport TimelineScreen from \"./screens/TimelineScreen\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: \"light\",\r\n      primary: {\r\n        light: \"#fbefbf\",\r\n        main: \"#478990\",\r\n        dark: \"#322835\",\r\n      },\r\n      secondary: {\r\n        light: \"#fbefbf\",\r\n        main: \"#65220e\",\r\n        dark: \"#676665\",\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <Navbar />\r\n        <main>\r\n          <Switch>\r\n            <Route path='/' exact component={HomeScreen} />\r\n            <Route path='/timeline/:username' component={TimelineScreen} />\r\n          </Switch>\r\n        </main>\r\n        <Footer />\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\screens\\HomeScreen.js",[],"C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\components\\Navbar.js",["37","38"],"C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\components\\Footer.js",[],"C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\index.js",[],"C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\screens\\TimelineScreen.js",[],"C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\components\\GithubTimeline.js",["39"],"import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport parseDate from \"../utils/parseDate\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\n\r\nconst useClasses = makeStyles((theme) => ({\r\n  timelinePaper: {\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\r\n    maxWidth: \"22rem\",\r\n    // [theme.breakpoints.down(\"sm\")]: {\r\n    //   maxWidth: \"9rem\",\r\n    // },\r\n  },\r\n  button: {\r\n    margin: `${theme.spacing(1)}px ${theme.spacing(0.5)}px`,\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    width: \"4px\",\r\n  },\r\n  oppositeContent: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flex: \"0.3\",\r\n    },\r\n    padding: \"6px 8px 6px 0px\",\r\n  },\r\n  timelineContent: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flex: \"0.7\",\r\n    },\r\n  },\r\n  timelineDot: {\r\n    marginLeft: \"-3px\",\r\n  },\r\n}));\r\n\r\nconst GithubTimeline = ({ repositories }) => {\r\n  const theme = useTheme();\r\n  const classes = useClasses(theme);\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  return (\r\n    <Timeline>\r\n      {repositories.map((repo) => (\r\n        <TimelineItem key={repo.id}>\r\n          <TimelineOppositeContent className={classes.oppositeContent}>\r\n            <Typography>{parseDate(repo.created_at)}</Typography>\r\n          </TimelineOppositeContent>\r\n          <TimelineSeparator className={classes.secondaryTail}>\r\n            <TimelineDot className={classes.timelineDot} />\r\n          </TimelineSeparator>\r\n          <TimelineContent className={classes.timelineContent}>\r\n            <Paper className={classes.timelinePaper}>\r\n              <Typography\r\n                style={{ wordBreak: \"break-all\" }}\r\n                variant={isMobile ? \"button\" : \"h6\"}\r\n                component='h6'\r\n              >\r\n                {repo.name}\r\n              </Typography>\r\n              <Typography varaint='subtitle1' component='p'>\r\n                {repo.description}\r\n              </Typography>\r\n              {repo.language && (\r\n                <Chip className={classes.chip} label={repo.language} />\r\n              )}{\" \"}\r\n              <br />\r\n              <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                className={classes.button}\r\n                target='blank'\r\n                rel='noopener noreferrer'\r\n                href={repo.html_url}\r\n              >\r\n                View Source\r\n              </Button>\r\n              {repo.homepage && (\r\n                <Button\r\n                  variant='outlined'\r\n                  color='secondary'\r\n                  className={classes.button}\r\n                  target='blank'\r\n                  rel='noopener noreferrer'\r\n                  href={repo.homepage}\r\n                >\r\n                  View HomePage\r\n                </Button>\r\n              )}\r\n            </Paper>\r\n          </TimelineContent>\r\n        </TimelineItem>\r\n      ))}\r\n    </Timeline>\r\n  );\r\n};\r\n\r\nexport default GithubTimeline;\r\n","C:\\Users\\rohin\\OneDrive\\Desktop\\Projects\\github-timeline\\src\\utils\\parseDate.js",["40"],{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":6,"column":10,"nodeType":"43","messageId":"44","endLine":6,"endColumn":16},{"ruleId":"41","severity":1,"message":"46","line":6,"column":18,"nodeType":"43","messageId":"44","endLine":6,"endColumn":28},{"ruleId":"41","severity":1,"message":"47","line":8,"column":8,"nodeType":"43","messageId":"44","endLine":8,"endColumn":25},{"ruleId":"48","severity":1,"message":"49","line":1,"column":1,"nodeType":"50","endLine":19,"endColumn":3},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'IconButton' is defined but never used.","'TimelineConnector' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]